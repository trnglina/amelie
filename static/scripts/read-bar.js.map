{"version":3,"sources":["read-bar.js"],"names":["toggleButton","bar","getElementsByClassName","document","getElementsByTagName","container","article","template","ReadBar","createElement","trim","firstChild","style","display","isExpanded","classList","contains","updatePosition","window","clientWidth","this","disabled","remove","left","setExpanded","expanded","add","toggle","toc","root","className","i","children","length","node","newNode","newNodeContent","nodeName","innerHTML","href","id","appendChild","onfocus","onclick","addEventListener","body","_ref","altKey","keyCode","ctrlKey","insertBefore"],"mappings":"cAWA,WAEC,IA+FOA,EAAAA,SAAeC,qBAAIC,QAAuB,GAC1CF,EAAJG,SAAAC,qBAAA,QAAA,GAEIC,EAAJA,EAAoBH,qBAAuB,WAAA,GACvCG,EAAAA,IAhGU,SAAUC,GAA1B,IACWC,EADLC,IACKD,EAAIJ,SAAMM,cAAA,QACXF,UAAWJ,2LADnBO,OAOEH,EAASI,WAAWC,MAAMC,QAAU,OAIlCC,EAAaH,YA6Ed,OA7EHV,EAAIa,WAAa,WAAA,OAAMb,EAAIc,UAAUC,SAAS,aAG5Cf,EAAAgB,eAAcJ,WAeZ,GAdoB,QAApBZ,EAAIW,MAAMC,UACXZ,EAAAW,MAAAC,QAAA,SAICK,OAAKlB,WAFPM,EAGOa,YAAA,GAAAC,KAAAD,YACLC,KAAInB,aAAAoB,UAAkB,GAErBpB,EAAAa,cADCb,EAAIc,UAAUO,OAAO,YAGxBF,KAAApB,aAAAqB,UAAA,GAGCpB,EAAMsB,aAKNH,KAAKR,MAAMW,KAAO,OALGJ,CAArB,IAAMI,EAAOjB,EAAQa,YAAc,GAAkB,KACjDC,KAAKR,MAAMW,MAAQA,IACrBH,KAAKR,MAAMW,KAAOA,KAOxBtB,EAAIuB,YAAc,SAAUC,GACtBA,EACFxB,EAAIc,UAAUW,IAAI,YAGlBzB,EAAIc,UAAUO,OAAO,YAFrBrB,EAAIgB,kBAORhB,EAAI0B,OAAS,WACP1B,EAAIa,aACNb,EAAIuB,aAAY,GAEhBvB,EAAIuB,aAAY,IAIpBvB,EAAI2B,IAAO,WACT,IAAMC,EAAO1B,SAASM,cAAc,MACpCoB,EAAKC,UAAY,WACjB,IAAK,IAAIC,EAAI,EAAGA,EAAIzB,EAAQ0B,SAASC,OAAQF,IAAK,CAAlD,IAAKG,EAAL5B,EAAoBA,SAAQ0B,GAC1B,OAAUE,EAAG5B,UAEX,IAAK,KADP,IAAA,KACE,IAAK,KACL,IAAK,KACL,IAAK,KACL,IAAK6B,EAALhC,SAAAM,cAAA,MACK2B,EAALjC,SAAAM,cAAA,KACE2B,EAAgBjC,UAASM,EAAAA,SACzB2B,EAAMA,UAAiBjC,EAASM,UAChC2B,EAAeN,KAAAA,IAAYI,EAAKG,GAChCD,EAAeE,QAAf,WAAA,OAA+BrC,EAACqC,aAAhC,IACAF,EAAeG,OAAO,WAAA,OAAML,EAAKM,aAAjC,IAGAL,EAAQM,YAAYL,GAFpBA,EAAAA,YAAeM,IAGfb,OAAiBM,EAAjBN,EAAAA,SAAKY,OACLZ,EAIN,KAxBS,GAmCX5B,EAAID,aAAeC,EAAIC,uBAAuB,iBAAiB,GAC/DD,EAAID,aAAa2C,QAAU1C,EAAI0B,OAP3B1B,EAAAI,UAAAJ,EAAAC,uBAAA,oBAAA,GACDD,EAFDI,UAEOoC,YAAAxC,EAAA2B,KAEN3B,EAOCI,CAAUoC,GAhGhBxC,IA2GEiB,OAAO0B,iBAAiB,SAAU,WAAA,OAAM3C,EAAIgB,mBAN9CC,OAAU0B,iBAAYxC,OAAAA,WAAAA,OAATH,EAA8BgB,mBAE3C4B,EAAMvC,iBAAoBF,UAAAA,SAAAA,GAA1B,IAA0BA,EAA1B0C,EAA0B1C,QAAqB2C,EAA/CD,EAA+CC,OAA/BC,EAAhBF,EAAgBE,QACPC,GAAOzC,GAAhB,IAAYwC,IAQN/C,EAAI0B,SAND1B,EAAAa,cACDb,EAAC2C,SAAAA,GAAAA,WACyBvC,EAAhC6C,aAAAjD,EAAAK,IAjHJ","file":"read-bar.js","sourcesContent":["// To the extent possible under law, the author(s) have dedicated all copyright\n// and related and neighbouring rights to this software and all related code\n// files to the public domain worldwide. A copy of the CC0 Public Domain\n// Dedication may be obtained at:\n//\n//     http://creativecommons.org/publicdomain/zero/1.0/\n//\n// Unless required by applicable law or agreed to in writing, this software is\n// distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.\n\n/* eslint-disable require-jsdoc */\n\n(() => {\n  const basePadding = 40;\n\n  const ReadBar = function (article) {\n    const bar = (() => {\n      const template = document.createElement('div');\n      template.innerHTML = `\n        <aside class=\"read-bar\">\n          <button class=\"toggle-button\" aria-hidden=\"true\" tabindex=\"-1\"></button>\n          <div class=\"scroll-container\"></div>\n        </aside>`.trim();\n      template.firstChild.style.display = 'none';\n      return template.firstChild;\n    })();\n\n    bar.isExpanded = () => bar.classList.contains('expanded');\n\n    bar.updatePosition = function () {\n      if (bar.style.display == 'none') {\n        bar.style.display = 'block';\n      }\n\n      if (window.innerWidth <\n        article.clientWidth + 2 * basePadding + this.clientWidth) {\n        this.toggleButton.disabled = false;\n      } else {\n        if (bar.isExpanded()) {\n          bar.classList.remove('expanded');\n        }\n        this.toggleButton.disabled = true;\n      }\n\n      if (!bar.isExpanded()) {\n        const left = article.clientWidth + 2 * basePadding + 'px';\n        if (this.style.left != left) {\n          this.style.left = left;\n        }\n      } else {\n        this.style.left = '';\n      }\n    };\n\n    bar.setExpanded = function (expanded) {\n      if (expanded) {\n        bar.classList.add('expanded');\n        bar.updatePosition();\n      } else {\n        bar.classList.remove('expanded');\n        bar.updatePosition();\n      }\n    };\n\n    bar.toggle = function () {\n      if (bar.isExpanded()) {\n        bar.setExpanded(false);\n      } else {\n        bar.setExpanded(true);\n      }\n    };\n\n    bar.toc = (() => {\n      const root = document.createElement('ul');\n      root.className = 'toc-list';\n      for (let i = 0; i < article.children.length; i++) {\n        const node = article.children[i];\n        switch (node.nodeName) {\n          case 'H2':\n          case 'H3':\n          case 'H4':\n          case 'H5':\n          case 'H6':\n            const newNode = document.createElement('li');\n            const newNodeContent = document.createElement('a');\n            newNodeContent.className = node.nodeName;\n            newNodeContent.innerHTML = node.innerHTML;\n            newNodeContent.href = '#' + node.id;\n            newNodeContent.onfocus = () => bar.setExpanded(true);\n            newNodeContent.onblur = () => bar.setExpanded(false);\n            newNode.appendChild(newNodeContent);\n            root.appendChild(newNode);\n            break;\n        }\n      }\n\n      // this will make the bar fail to appear if there are no elements\n      // in the toc. this is a hack atm, but it works. if, in the future,\n      // there are other things in the bar, a more sophisticated system\n      // would be better\n      if (root.children.length > 0) {\n        return root;\n      } else {\n        return null;\n      }\n    })();\n\n    bar.toggleButton = bar.getElementsByClassName('toggle-button')[0];\n    bar.toggleButton.onclick = bar.toggle;\n\n    bar.container = bar.getElementsByClassName('scroll-container')[0];\n    bar.container.appendChild(bar.toc);\n\n    return bar;\n  };\n\n  const body = document.getElementsByTagName('body')[0];\n  const container = document.getElementsByTagName('main')[0];\n  const article = container.getElementsByTagName('article')[0];\n  const bar = new ReadBar(article);\n\n  if (bar) {\n    window.addEventListener('resize', () => bar.updatePosition());\n    window.addEventListener('load', () => bar.updatePosition());\n\n    body.addEventListener('keydown', ({ ctrlKey, altKey, keyCode }) => {\n      if (ctrlKey && altKey && keyCode == 82) {\n        bar.toggle();\n        if (bar.isExpanded()) {\n          bar.children[0].focus();\n        }\n      }\n    });\n\n    container.insertBefore(bar, article);\n  }\n})();\n"]}