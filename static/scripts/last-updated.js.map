{"version":3,"sources":["last-updated.js"],"names":["makeRequest","LastUpdatedIndicator","date","createElement","template","document","replace","substring","trim","XMLHttpRequest","readyState","linkObject","status","callback","x","onreadystatechange","this","open","href","send","links","i","length","dummy","innerHTML","response","metaElements","getElementsByTagName","j","attributes","value","wrapper","parentNode","insertBefore","nextSibling","firstChild","title"],"mappings":"cAWA,WA2BIA,IAzBH,IAAAC,EAAM,SAAAC,GACL,IAAMD,EAAAA,SAAuBE,cAAvBF,OAYJ,OAXAG,EAAMA,UAAWC,2GAAAA,OADnBH,EACmBG,MAAAA,OADnBH,EAAAI,QAAA,KAAA,KAAAC,UAAA,GACmBF,+CAUFG,OACRJ,EAAOK,YAEZT,EAASU,SAALC,EAA6BC,GAC/BC,IAAAA,EAAAA,IAASF,eACVG,EAAAC,mBAAA,WAHH,GAAAC,KAAAN,YAAA,KAAAM,KAAAJ,QAEIC,EAASF,EAAYK,OAJ3BF,EAAAG,KAAA,MAAAN,EAAAO,MAAA,GAQEJ,EAAEK,QAICC,EAALf,SAAoBe,uBAAmB,eACrCpB,EAAW,EAACoB,EAAMC,EAAIC,OAASX,IAC7BX,EAAWoB,EAAGf,GAAQ,SAACF,EAATW,GACdS,IAAMC,EAAAA,SAAcC,cAApB,QACAF,EAAMG,UAAYZ,EAAGS,SACrB,IADA,IAAMG,EAAeH,EAAMI,qBAAqB,QACvCC,EAAI,EAAGA,EAAIF,EAAaJ,OAAQM,IACvC,GAAIF,EAAaE,GAAGC,WAAW,eAAmE,iBAAlDH,EAAaE,GAAGC,WAAW,cAAcC,MAA0B,CACjH,IAAM5B,EAAOwB,EAAAE,GAAgBC,WAAhBH,QAAsCI,MAC7CC,EAAU,IAAI9B,EAAqBC,GACzCS,EAAWqB,WAAWC,aAAaF,EAASpB,EAAWuB,aACvDH,EAAQE,aAAatB,EAAYoB,EAAQI,YACzCJ,EAAQK,MAARL,gBAAAA,OAAA7B,EAAAI,QAAqCA,KAAL,SArC1C","file":"last-updated.js","sourcesContent":["// To the extent possible under law, the author(s) have dedicated all copyright\n// and related and neighbouring rights to this software and all related code\n// files to the public domain worldwide. A copy of the CC0 Public Domain\n// Dedication may be obtained at:\n//\n//     http://creativecommons.org/publicdomain/zero/1.0/\n//\n// Unless required by applicable law or agreed to in writing, this software is\n// distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.\n\n/* eslint-disable require-jsdoc */\n\n(() => {\n  const LastUpdatedIndicator = function(date) {\n    const template = document.createElement('div');\n    template.innerHTML = `\n        <span class=\"last-updated\">\n          <span class=\"marker\">\n            up. <time datetime=\"${date}\">${date.replace(/-/g, '/').substring(2)}</time>\n          </span>\n        </span>`.trim();\n    return template.firstChild;\n  };\n\n  const makeRequest = function(linkObject, callback) {\n    const x = new XMLHttpRequest();\n    x.onreadystatechange = function() {\n      if (this.readyState == 4 && this.status == 200) {\n        callback(linkObject, this);\n      }\n    };\n    x.open('GET', linkObject.href, true);\n    x.send();\n  };\n\n  const links = document.getElementsByClassName('update-date');\n  for (let i = 0; i < links.length; i++) {\n    makeRequest(links[i], function(linkObject, x) {\n      const dummy = document.createElement('html');\n      dummy.innerHTML = x.response;\n      const metaElements = dummy.getElementsByTagName('meta');\n      for (let j = 0; j < metaElements.length; j++) {\n        if (metaElements[j].attributes['http-equiv'] && metaElements[j].attributes['http-equiv'].value == 'last-modified') {\n          const date = metaElements[j].attributes['content'].value;\n          const wrapper = new LastUpdatedIndicator(date);\n          linkObject.parentNode.insertBefore(wrapper, linkObject.nextSibling);\n          wrapper.insertBefore(linkObject, wrapper.firstChild);\n          wrapper.title = `Last updated ${date.replace(/-/g, '/')}`;\n        }\n      }\n    });\n  }\n})();\n"]}