{"version":3,"sources":["last-updated.js"],"names":["LastUpdatedIndicator","date","createElement","template","document","replace","substring","firstChild","makeRequest","linkObject","x","XMLHttpRequest","onreadystatechange","this","status","callback","readyState","open","href","send","links","getElementsByClassName","i","length","dummy","innerHTML","getElementsByTagName","j","metaElements","response","attributes","value","wrapper","parentNode","nextSibling","title","concat"],"mappings":"cAWA,WAsBE,IApBD,IAAAA,EAAM,SAAAC,GACL,IAAMD,EAAAA,SAAuBE,cAAvBF,OAIJ,OAHAG,EAAMA,UAAWC,iFAAAA,OACIH,EADJG,MAAAA,OACIH,EAAAI,QAAA,KAAA,KAAAC,UACqDL,GAFzDG,yBAEuEC,OACjFF,EAASI,YAGZC,EAAc,SAAdA,EAAuBC,GAC3B,IAAOC,EAAG,IAAIC,eACdD,EAAEE,mBAAqB,WAAA,GAArBA,KAAAA,YAAgC,KAAXC,KAAWC,QAChCC,EAASC,EAAcH,OAGxBH,EAJDO,KAAA,MAAAR,EAAAS,MAAA,GAMAR,EAAES,QARJC,EAAAhB,SAAAiB,uBAAA,eAYSC,EAAI,EAAGA,EAAIF,EAAMG,OAAQD,IADlCd,EAAcJ,EAAQkB,GAACD,SAAAA,EAAuBX,GAG1C,IAAMc,EAAQpB,SAASF,cAAc,QAFzCsB,EAAUC,UAAUL,EAAAA,SAEhB,IADFZ,IAAAA,EAAsBgB,EAAAE,qBAAwB,QACjCC,EAAGvB,EAAAA,EAAQwB,EAAC1B,OAATyB,IACdH,GAAMC,EAAaE,GAACE,WAApB,eAAA,iBAAAD,EAAAD,GAAAG,WAAA,cAAAC,MAAA,CACMH,IAAAA,EAAYA,EAASF,GAAAA,WAAT,QAAlBK,MAIUC,EAAU,IAAIhC,EAAqBC,GAH7CQ,EAAAwB,WAAoBL,aAApBI,EAA8CvB,EAAAyB,aAC5CF,EAAIJ,aAAgBE,EAAWE,EAA3BzB,YACFyB,EAAUG,MAAV,gBAAAC,OAA6BN,EAAhBzB,QAA2B,KAAW0B,SA7B7D","file":"last-updated.js","sourcesContent":["// To the extent possible under law, the author(s) have dedicated all copyright\n// and related and neighbouring rights to this software and all related code\n// files to the public domain worldwide. A copy of the CC0 Public Domain\n// Dedication may be obtained at:\n//\n//     http://creativecommons.org/publicdomain/zero/1.0/\n//\n// Unless required by applicable law or agreed to in writing, this software is\n// distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.\n\n/* eslint-disable require-jsdoc */\n\n(() => {\n  const LastUpdatedIndicator = function(date) {\n    const template = document.createElement('div');\n    template.innerHTML = `\n        <span class=\"last-updated\"><span class=\"marker\">up. <time datetime=\"${date}\">${date.replace(/-/g, '/').substring(2)}</time></span></span>`.trim();\n    return template.firstChild;\n  };\n\n  const makeRequest = function(linkObject, callback) {\n    const x = new XMLHttpRequest();\n    x.onreadystatechange = function() {\n      if (this.readyState == 4 && this.status == 200) {\n        callback(linkObject, this);\n      }\n    };\n    x.open('GET', linkObject.href, true);\n    x.send();\n  };\n\n  const links = document.getElementsByClassName('update-date');\n  for (let i = 0; i < links.length; i++) {\n    makeRequest(links[i], function(linkObject, x) {\n      const dummy = document.createElement('html');\n      dummy.innerHTML = x.response;\n      const metaElements = dummy.getElementsByTagName('meta');\n      for (let j = 0; j < metaElements.length; j++) {\n        if (metaElements[j].attributes['http-equiv'] && metaElements[j].attributes['http-equiv'].value == 'last-modified') {\n          const date = metaElements[j].attributes['content'].value;\n          const wrapper = new LastUpdatedIndicator(date);\n          linkObject.parentNode.insertBefore(wrapper, linkObject.nextSibling);\n          wrapper.insertBefore(linkObject, wrapper.firstChild);\n          wrapper.title = `Last updated ${date.replace(/-/g, '/')}`;\n        }\n      }\n    });\n  }\n})();\n"]}