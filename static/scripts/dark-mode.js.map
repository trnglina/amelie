{"version":3,"sources":["dark-mode.js"],"names":["body","document","getElementsByTagName","toggleDarkMode","this","isDarkMode","contains","classList","localStorage","setItem","add","addEventListener","_ref","ctrlKey","altKey","keyCode","button","setState","lightIcon","darkIcon","DarkModeButton","createElement","template","dark","firstChild","children","style","display","onclick","getElementById","appendChild"],"mappings":"cAWA,WAEC,IA4BCA,EAAAC,SAAAC,qBAAA,QAAA,GAIAF,EAAKG,WAAAA,WACH,OAAIC,KAAKC,UAATC,SAAuB,SAGtBN,EAHDG,eAGO,WACLC,KAAKG,cACLC,KAAAA,UAAaC,OAAQ,QACtBD,aAAAC,QAAA,aAAA,KAFCL,KAAKG,UAAUG,IAAI,QAKnBF,aAACG,QAAiB,aAAW,KAAjCX,EAAKW,iBAAiB,UAAW,SAAAC,GAAgC,IAA9BC,EAA8BD,EAA9BC,QAASC,EAAqBF,EAArBE,OAAQC,EAAaH,EAAbG,QAC9CF,GAAWC,GAAqB,IAAXC,IACvBf,EAAKG,iBACLa,EAAOC,SAASjB,EAAKK,iBAIzB,IAAMW,EAAS,IAjDV,SAAAE,EAAAC,GACL,IACQH,EADFI,IACEJ,EAAUf,SAAMoB,cAAA,QACdC,UAAWrB,iGAAAA,OAOVqB,EAPUrB,0BAAAA,OADnBkB,EACmBlB,+BAUnBe,OACMO,EAAMC,YASZ,OANGR,EAHDC,SAGO,SAAAM,GACLA,GACAnB,KAAKqB,SAAS,GAAGC,MAAMC,QAAU,OAClCvB,KAAAqB,SAAA,GAAAC,MAAAC,QAAA,iBAFCvB,KAAKqB,SAAS,GAAGC,MAAMC,QAAU,eAKrCvB,KAAOY,SAAP,GAAAU,MAAAC,QAAA,SAAOX,EA0BM,CAKfA,yBACEhB,yBADFgB,EAAOY,QAAU,WAKjB5B,EAAIQ,iBACFR,EAAKO,SAAUG,EAAIL,eAErB,QAAAW,aAAgBhB,QAAKK,cACrBJ,EAAAA,UAAS4B,IAAAA,QADTb,EAAOC,SAASjB,EAAKK,cACrBJ,SAAS4B,eAAe,mBAAmBC,YAAYd,GAjEzD","file":"dark-mode.js","sourcesContent":["// To the extent possible under law, the author(s) have dedicated all copyright\n// and related and neighbouring rights to this software and all related code\n// files to the public domain worldwide. A copy of the CC0 Public Domain\n// Dedication may be obtained at:\n//\n//     http://creativecommons.org/publicdomain/zero/1.0/\n//\n// Unless required by applicable law or agreed to in writing, this software is\n// distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n// KIND, either express or implied.\n\n/* eslint-disable require-jsdoc */\n\n(() => {\n  const DarkModeButton = function(lightIcon, darkIcon) {\n    const button = (() => {\n      const template = document.createElement('div');\n      template.innerHTML = `\n      <button class=\"dark-mode-button\" aria-hidden=\"true\" tabindex=\"-1\">\n        <img src=\"${lightIcon}\">\n        <img src=\"${darkIcon}\">\n      </button>\n      `.trim();\n      return template.firstChild;\n    })();\n\n    button.setState = function(dark) {\n      if (dark) {\n        this.children[0].style.display = 'none';\n        this.children[1].style.display = 'inline-block';\n      } else {\n        this.children[0].style.display = 'inline-block';\n        this.children[1].style.display = 'none';\n      }\n    };\n\n    return button;\n  };\n\n  const body = document.getElementsByTagName('body')[0];\n\n  body.isDarkMode = function() {\n    return this.classList.contains('dark');\n  };\n\n  body.toggleDarkMode = function() {\n    if (this.isDarkMode()) {\n      this.classList.remove('dark');\n      localStorage.setItem('dark-mode', false);\n    } else {\n      this.classList.add('dark');\n      localStorage.setItem('dark-mode', true);\n    }\n  };\n\n  body.addEventListener('keydown', ({ctrlKey, altKey, keyCode}) => {\n    if (ctrlKey && altKey && keyCode == 68) {\n      body.toggleDarkMode();\n      button.setState(body.isDarkMode());\n    }\n  });\n\n  const button = new DarkModeButton(\n      '/images/icons/moon.svg',\n      '/images/icons/sun.svg'\n  );\n\n  button.onclick = () => {\n    body.toggleDarkMode();\n    button.setState(body.isDarkMode());\n  };\n\n  if (localStorage.getItem('dark-mode') == 'true') {\n    body.classList.add('dark');\n  }\n  button.setState(body.isDarkMode());\n  document.getElementById('main-navigation').appendChild(button);\n})();\n"]}